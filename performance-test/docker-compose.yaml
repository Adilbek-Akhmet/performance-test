version: "2.4"

services:
  reactive-quarkus:
    image: reactive-quarkus:1.0.0
    container_name: reactive-quarkus
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_HOST=vertx-reactive:postgresql://postgresql:5432/postgres
    networks: [ "microservices" ]
    mem_limit: 2g  # Maximum amount of memory set to 2 GB
    cpus: '2.0'  # Allocate 2 CPU units

  quarkus:
    image: quarkus:1.0.0
    container_name: quarkus
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_HOST=jdbc:postgresql://postgresql:5432/postgres
    networks: [ "microservices" ]
    mem_limit: 2g  # Maximum amount of memory set to 2 GB
    cpus: '2.0'  # Allocate 2 CPU units

  spring:
    image: spring:1.0.0
    container_name: spring
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_HOST=jdbc:postgresql://postgresql:5432/postgres
    networks: [ "microservices" ]
    mem_limit: 2g  # Maximum amount of memory set to 2 GB
    cpus: '2.0'  # Allocate 2 CPU units

  reactive-spring:
    image: reactive-spring:1.0.0
    container_name: reactive-spring
    ports:
      - "8080:8080"
    environment:
      - POSTGRES_HOST=r2dbc:postgresql://postgresql:5432/postgres
    networks: [ "microservices" ]
    mem_limit: 2g  # Maximum amount of memory set to 2 GB
    cpus: '2.0'  # Allocate 2 CPU units

  postgresql:
    image: postgres:14.2
    container_name: postgresql
    expose:
      - "5432"
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=microservices
      - POSTGRES_HOST=5432
    command: -p 5432
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    mem_limit: 2g  # Maximum amount of memory set to 2 GB
    cpus: '2.0'  # Allocate 2 CPU units
    networks: [ "microservices" ]

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks: [ "microservices" ]

  node_exporter:
    container_name: microservices_node_exporter
    restart: always
    image: prom/node-exporter
    ports:
      - '9101:9100'
    networks: [ "microservices" ]

  grafana:
    container_name: microservices_grafana
    restart: always
    image: grafana/grafana
    ports:
      - '3000:3000'
    networks: [ "microservices" ]

networks:
  microservices:
    name: microservices